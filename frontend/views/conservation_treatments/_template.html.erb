<%
  # The conservation treatment form mimics the checkboxes from the assessment
  # form for formats/treatments.  As such, whereever we show this form, we need
  # to first grab all of these definitions.
  #
  # Instead of aliasing all controllers that may possibly use this template, I
  # grab these definitions on demand (yep, it's a backend API call with a bunch
  # of SQL no doubt).  She'll be right.
  @assessment_attribute_definitions ||= AssessmentAttributeDefinitions.find(nil)
  is_from_assessment = defined?(generating_from_assessment)
%>

<% define_template "conservation_treatment", jsonmodel_definition(:conservation_treatment) do |form| %>
  <div class="subrecord-form-fields">

    <% if !is_from_assessment %>

    <div class="form-group">
      <%= form.label('status', {}, ['col-sm-2']) %>
      <div class="col-sm-9 label-only">
        <% if form.obj['status'] %>
          <%= I18n.t("conservation_treatment._status.#{form.obj['status']}", :default => form.obj['status']) %>
        <% else %>
          <span class="text-muted">-- auto-generated upon save --</span>
        <% end %>
      </div>
    </div>

    <% end %>

    <%= form.hidden_input "treatment_batch_id" %>
    <%= form.hidden_input "persistent_create_time" %>

    <%= form.label_and_textarea "treatment_process", {:field_opts => {:clean => true, :escape => false}} %>

    <%= form.label_and_date "start_date" %>
    <%= form.label_and_date "end_date" %>

    <%= form.label_and_textarea "materials_used_consumables", {:field_opts => {:clean => true, :escape => false}} %>
    <%= form.label_and_textarea "materials_used_staff_time", {:field_opts => {:clean => true, :escape => false}} %>

    <%= form.label_and_textfield "external_reference" %>

    <% if !is_from_assessment %>

    <% if form.readonly? %>
      <% if form.obj["user"] %>
        <% token = render_token :object => form.obj["user"]['_resolved'],
                                :label => form.obj["user"]['_resolved']['title'],
                                :type => "agent_person",
                                :uri => form.obj["user"]["ref"],
                                :placement => "top" %>
        <%= form.label_with_field "user", token, :control_class => 'token-list' %>
      <% end %>
    <% else %>
      <% form.push("user", form.obj["user"] || {}) do %>
        <div class="form-group">
          <%= form.label('user', {:for => form.id_for(nil)}, ['col-sm-2']) %>
          <div class="col-sm-9">
            <div class="form-group">
              <div class="input-group linker-wrapper">
                <input type="text" class="linker"
                       id="<%= form.id_for(nil) %>"
                       data-label="<%= I18n.t("conservation_treatment.user") %>"
                       data-label_plural="<%= I18n.t("conservation_treatment.user") %>"
                       data-path="<%= form.path %>"
                       data-name="ref"
                       data-url="<%= url_for :controller => :search, :action => :do_search, :format => :json %>"
                       data-browse-url="<%= url_for :controller => :search, :action => :do_search, :format => :js, :facets => [], :display_identifier => true %>"
                       data-selected="<%= ASUtils.to_json(form.obj['_resolved']) %>"
                       data-format_property="display_string"
                       data-multiplicity="one"
                       data-types='["agent_with_user"]'
                  />
                <div class="input-group-btn">
                  <a class="btn btn-default dropdown-toggle last" data-toggle="dropdown" href="javascript:void(0);"><span class="caret"></span></a>
                  <ul class="dropdown-menu">
                    <li><a href="javascript:void(0);" class="linker-browse-btn"><%= I18n.t("actions.browse") %></a></li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      <% end %>
    <% end %>

    <% if form.readonly? %>
      <% if form.obj["assessment"] %>
        <% token = render_token :object => form.obj["assessment"]['_resolved'],
                                :label => form.obj["assessment"]['_resolved']['display_string'],
                                :type => "assessment",
                                :uri => form.obj["assessment"]["ref"],
                                :placement => "top" %>
        <%= form.label_with_field "assessment", token, :control_class => 'token-list' %>
      <% end %>
    <% else %>
      <% form.push("assessment", form.obj["assessment"] || {}) do %>
        <div class="form-group">
          <%= form.label('assessment', {:for => form.id_for(nil)}, ['col-sm-2']) %>
          <div class="col-sm-9">
            <div class="form-group">
              <div class="input-group linker-wrapper">
                <input type="text" class="linker"
                       id="<%= form.id_for(nil) %>"
                       data-label="<%= I18n.t("conservation_treatment.assessment") %>"
                       data-label_plural="<%= I18n.t("conservation_treatment.assessment") %>"
                       data-path="<%= form.path %>"
                       data-name="ref"
                       data-url="<%= url_for :controller => :search, :action => :do_search, :format => :json %>"
                       data-browse-url="<%= url_for :controller => :search, :action => :do_search, :format => :js, :facets => [], :display_identifier => true %>"
                       data-selected="<%= ASUtils.to_json(form.obj['_resolved']) %>"
                       data-format_property="display_string"
                       data-multiplicity="one"
                       data-types='["assessment"]'
                  />
                <div class="input-group-btn">
                  <a class="btn btn-default dropdown-toggle last" data-toggle="dropdown" href="javascript:void(0);"><span class="caret"></span></a>
                  <ul class="dropdown-menu">
                    <li><a href="javascript:void(0);" class="linker-browse-btn"><%= I18n.t("actions.browse") %></a></li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      <% end %>
    <% end %>
    <% end %>

    <hr/>

    <div class="subrecord-form-container">
      <div class="row">
        <div class="col-sm-2 text-right">
          <% if is_from_assessment %>
            <%= wrap_with_tooltip(I18n.t('conservation_treatment.treatments_applied'), "qsa_tooltips.assessment.#{form.i18n_for('treatments_applied')}_tooltip", 'subrecord-form-heading-label') %>
          <% else %>
            <%= wrap_with_tooltip(I18n.t('conservation_treatment.treatments_applied'), "qsa_tooltips.#{form.i18n_for('treatments_applied')}_tooltip", 'subrecord-form-heading-label') %>
          <% end %>
        </div>
      </div>

      <% if form.readonly? %>
        <br>
        <div class="row">
          <div class="col-sm-9 col-sm-offset-2">
            <% if ASUtils.wrap(form.obj['treatments']).empty? %>
              <span class="muted">No treatments applied</span>
            <% else %>
              <ul>
                <% ASUtils.wrap(form.obj['treatments']).sort_by{|t| t['label']}.each do |treatment| %>
                  <li><%= treatment['label'] %></li>
                <% end %>
              </ul>
            <% end %>
          </div>
        </div>
      <% else %>
        <div class="row">
          <% formats_index = 0 %>
          <% (@assessment_attribute_definitions.global_formats + @assessment_attribute_definitions.repo_formats).sort_by{|f| f['label']}.each do |format| %>
            <% form.push(form.set_index("treatments[]", formats_index), ASUtils.wrap(form.obj['treatments']).find{|r| r['definition_id'] == format['id']} || {'definition_id' => format['id'], 'value' => 'false'}) do %>
              <div class="col-md-6">
                <div class="form-group">
                  <%= label_tag form.id_for('definition_id'), I18n.t("assessment_attribute.format.#{format.fetch('label')}", :default => format.fetch('label')), :class => 'col-sm-6 control-label' %>
                  <div class="col-sm-1 checkbox">
                    <%= form.checkbox('definition_id', {:value => form.obj['definition_id']}, false, form.obj['value'] == 'true') %>
                  </div>
                </div>
              </div>
            <% end %>
            <% formats_index += 1 %>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>
<% end %>
